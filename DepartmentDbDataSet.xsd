<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DepartmentDbDataSet" targetNamespace="http://tempuri.org/DepartmentDbDataSet.xsd" xmlns:mstns="http://tempuri.org/DepartmentDbDataSet.xsd" xmlns="http://tempuri.org/DepartmentDbDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DepartmentDbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DepartmentDbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Department.WinForms.Properties.Settings.GlobalReference.Default.DepartmentDbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblDepartmentsTableAdapter" GeneratorDataComponentClassName="tblDepartmentsTableAdapter" Name="tblDepartments" UserDataComponentName="tblDepartmentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DepartmentDbConnectionString (Settings)" DbObjectName="DepartmentDb.dbo.tblDepartments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblDepartments] WHERE (([Sno] = @Original_Sno) AND ([IsActive] = @Original_IsActive))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblDepartments] ([Name], [IsActive]) VALUES (@Name, @IsActive);
SELECT Sno, Name, IsActive FROM tblDepartments WHERE (Sno = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Sno, Name, IsActive FROM dbo.tblDepartments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblDepartments] SET [Name] = @Name, [IsActive] = @IsActive WHERE (([Sno] = @Original_Sno) AND ([IsActive] = @Original_IsActive));
SELECT Sno, Name, IsActive FROM tblDepartments WHERE (Sno = @Sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Sno" ColumnName="Sno" DataSourceName="DepartmentDb.dbo.tblDepartments" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Sno" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Sno" DataSetColumn="Sno" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="IsActive" DataSetColumn="IsActive" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DepartmentDbDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="DepartmentDbDataSet" msprop:Generator_DataSetName="DepartmentDbDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tblDepartments" msprop:Generator_RowEvHandlerName="tblDepartmentsRowChangeEventHandler" msprop:Generator_RowDeletedName="tblDepartmentsRowDeleted" msprop:Generator_RowDeletingName="tblDepartmentsRowDeleting" msprop:Generator_RowEvArgName="tblDepartmentsRowChangeEvent" msprop:Generator_TablePropName="tblDepartments" msprop:Generator_RowChangedName="tblDepartmentsRowChanged" msprop:Generator_RowChangingName="tblDepartmentsRowChanging" msprop:Generator_TableClassName="tblDepartmentsDataTable" msprop:Generator_RowClassName="tblDepartmentsRow" msprop:Generator_TableVarName="tabletblDepartments" msprop:Generator_UserTableName="tblDepartments">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Sno" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Sno" msprop:Generator_ColumnPropNameInTable="SnoColumn" msprop:Generator_ColumnVarNameInTable="columnSno" msprop:Generator_UserColumnName="Sno" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsActive" msprop:Generator_ColumnPropNameInRow="IsActive" msprop:Generator_ColumnPropNameInTable="IsActiveColumn" msprop:Generator_ColumnVarNameInTable="columnIsActive" msprop:Generator_UserColumnName="IsActive" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblDepartments" />
      <xs:field xpath="mstns:Sno" />
    </xs:unique>
  </xs:element>
</xs:schema>